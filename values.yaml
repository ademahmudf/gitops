# Default values for base.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.22.0"
  volumeMounts:
    - name: configName
      mountPath: /targetPath
      subPath: fileName
initContainers: []
  # - name: sysctl
  #   image: busybox:1.31.1
  #   imagePullPolicy: IfNotPresent
  #   securityContext:
  #     privileged: true
  #     runAsUser: 0
  #   command: ['sh', '-c', 'sysctl -w fs.inotify.max_user_watches=32768']
  # - name: initContainers2
  #   image: busybox:1.31.1
  #   imagePullPolicy: IfNotPresent
  #   securityContext:
  #     privileged: true
  #     runAsUser: 0
  #   command: ['sh', '-c', 'sysctl -w fs.inotify.max_user_watches=32768']

sidecar:
  enabled: false
  sidecarContainers:
  - name: cloudsql-proxy
    image: gcr.io/cloudsql-docker/gce-proxy:1.16
    command: ["/cloud_sql_proxy",
              "-instances=projectname:zone:dbInstanceName=tcp:dbPort",
              # If running on a VPC, the Cloud SQL proxy can connect via Private IP. See:
              # https://cloud.google.com/sql/docs/mysql/private-ip for more info.
              "-ip_address_types=PRIVATE",
              "-credential_file=/secrets/service_account.json"]
    securityContext:
      runAsUser: 2  # non-root user
      allowPrivilegeEscalation: false
    volumeMounts:
      - name: db-proxy-credentials
        mountPath: /secrets/
        readOnly: true

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

livenessProbe: {}
readinessProbe: {}
startupProbe: {}
lifeCycle: {}

volumes:
  - name: configName
    configMap:
      name: configName
      items:
        - key: fileName
          path: fileName

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
